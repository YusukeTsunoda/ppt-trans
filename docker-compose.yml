version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ppt-trans-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ppt_trans_dev}
      TZ: 'Asia/Tokyo'
    command: >
      postgres
      -c wal_level=logical
      -c max_replication_slots=5
      -c max_wal_senders=10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ppt-trans-pgadmin
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      TZ: 'Asia/Tokyo'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  # Local Supabase Environment
  supabase:
    image: supabase/supabase-dev:latest
    container_name: ppt-trans-supabase
    restart: unless-stopped
    ports:
      - '54321:54321'  # Supabase API
      - '54322:54322'  # Supabase Studio
      - '54323:54323'  # Supabase Auth
      - '54324:54324'  # Supabase Storage
      - '54325:54325'  # Supabase Realtime
      - '54326:54326'  # Supabase Edge Functions
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      JWT_SECRET: ${NEXTAUTH_SECRET:-your-secret-key-here-generate-with-openssl}
      ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY:-your-anon-key}
      SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-your-service-role-key}
      SUPABASE_URL: http://localhost:54321
      SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY:-your-anon-key}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-your-service-role-key}
    volumes:
      - supabase_data:/var/lib/supabase
      - ./supabase:/supabase
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    name: ppt-trans-postgres-data
  pgadmin_data:
    name: ppt-trans-pgadmin-data
  supabase_data:
    name: ppt-trans-supabase-data

networks:
  default:
    name: ppt-trans-network